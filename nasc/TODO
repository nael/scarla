BUGS:

- verfier les types cycliques pour les struct (fait planter llvm)


pour bien finir les traits {
- ecrire un gros torture test de linearisation/resolution des override
- implicits pour les select
- GROS TODO CLEAN
- verifier tout ce qui est fait avec des valuetype
}

- ordre: traits + ovd + object, user-def F[T] (erasure? spec?), modules
- better symbol init. elegant cleartype(tree) (shallow,deep,...)

- normaliser les trucs privés ($, __, ?)

#- Function overloading
- Regarder nocapture/nounwind/noalias
#- getters/setters automatiques
#- un bon pretty printing
#- bien gerer la mutabilité [const dans le langage ? pas pour l'instant]
- nested aggregates (une fois qu'on a symbol.owner & etc)
- Gestion d'erreur parsing
- Generer du BC
#- closures {
  nouveau type callable() (qui contient le context)
  conversion func => callable automatique
  conversion callable sans context => func
  verifier que ca compile en un truc rapide (genre map => loop)
 }
#- interfacer avec une lib C
- reflechir a la compil multi fichier & aux modules